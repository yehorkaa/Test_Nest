openapi: 3.0.0
info:
  title: User API
  description: API for managing users
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /users:
    get:
      summary: Get all users
      description: Returns a list of all users, filtered by role if a role is provided in the query parameters.
      operationId: findAll
      parameters:
        - in: query
          name: role
          schema:
            type: string
            enum: [admin, user]
          description: Role of user to filter by
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a user
      description: Creates a new user.
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDro'
      responses:
        '201':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get a user by ID
      description: Returns a single user identified by the ID in the URL parameter.
      operationId: findOne
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of user to return
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      summary: Update a user
      description: Updates a user identified by the ID in the URL parameter.
      operationId: update
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      description: Deletes a user identified by the ID in the URL parameter.
      operationId: remove
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of user to delete
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        userName:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, user]
        dataCreate:
          type: string
        profile:
          type: object
          properties:
            id:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            state:
              type: string